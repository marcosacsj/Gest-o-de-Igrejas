/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaPrincipal.java
 *
 * Created on 05/08/2012, 14:32:53
 */
package com.mc_system.gestao_igreja.ebd;

import com.mc_system.gestao_igreja.utilitarios.*;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.PlainDocument;


/**
 *
 * @author MC System
 */
public class EscolaBiblicaDominical extends javax.swing.JFrame {
public String usuario = Parametros.getsNmUsuas();
ConectaBanco con;
ResultSet lRes;
/** Creates new form TelaPrincipal */

    public EscolaBiblicaDominical() {
        super("Escola BÃ­blica Dominical ");
       // JOptionPane.showMessageDialog(rootPane,"Bem Vindo  "+ usuario, "Seja Bem Vindo", JOptionPane.PLAIN_MESSAGE);
        initComponents();
        //jButton15.setVisible(false);
        Usuario.setText(" "+usuario);
        this.setLocationRelativeTo(null);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Grupo = new javax.swing.ButtonGroup();
        Grupo2 = new javax.swing.ButtonGroup();
        Grupo3 = new javax.swing.ButtonGroup();
        DomingoAula1 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        TrimestePesquisa = new javax.swing.JComboBox();
        jLabel45 = new javax.swing.JLabel();
        AnoPesquisa = new javax.swing.JComboBox();
        PopularTab = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TabAluno = new javax.swing.JTable();
        Presenca1 = new javax.swing.JComboBox();
        Aluno_EBD = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        TipoClasse1 = new javax.swing.JComboBox();
        DomingoAula = new javax.swing.JComboBox();
        jPanel9 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        ImprimePauta = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        TabPauta = new javax.swing.JTable();
        Pesquisa = new javax.swing.JComboBox();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        NomeMembro = new javax.swing.JTextField();
        TipoClasse = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabMembro = new javax.swing.JTable();
        PesquisaNome = new javax.swing.JTextField();
        PesquisaMembro = new javax.swing.JButton();
        EfetuaMatricula = new javax.swing.JButton();
        NovoAluno = new javax.swing.JRadioButton();
        TrocaAluno = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        Usuario = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        DomingoAula1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione o domingo>", "DOMINGO1", "DOMINGO2", "DOMINGO3", "DOMINGO4", "DOMINGO5", "DOMINGO6", "DOMINGO7", "DOMINGO8", "DOMINGO9", "DOMINGO10", "DOMINGO11", "DOMINGO12" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(227, 227, 227));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setForeground(new java.awt.Color(51, 0, 204));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        TrimestePesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "1 TRIMESTE", "2 TRIMESTRE", "3 TRIMESTRE", "4 TRIMESTRE" }));

        jLabel45.setText("Selecione o Ano");

        AnoPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040" }));

        PopularTab.setText("Iniciar");
        PopularTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PopularTabMousePressed(evt);
            }
        });

        jButton15.setText("Salvar");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton15MousePressed(evt);
            }
        });

        jLabel48.setText("Selecione o Trimestre ");

        TabAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nome "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabAluno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabAlunoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TabAlunoMousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(TabAluno);

        Presenca1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "P", "F" }));

        Aluno_EBD.setEditable(false);
        Aluno_EBD.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel51.setText("Aluno");

        TipoClasse1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione a classe>", "CRIANCAS", "JUNIORES", "ADOLESCENTES", "JOVENS", "ADULTOS", "DISCIPULADO" }));

        DomingoAula.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione o domingo>", "DOMINGO1", "DOMINGO2", "DOMINGO3", "DOMINGO4", "DOMINGO5", "DOMINGO6", "DOMINGO7", "DOMINGO8", "DOMINGO9", "DOMINGO10", "DOMINGO11", "DOMINGO12" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(Aluno_EBD, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Presenca1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PopularTab)
                            .addComponent(jButton15))
                        .addGap(160, 160, 160))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TrimestePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel45)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AnoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addComponent(jLabel51)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DomingoAula, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TipoClasse1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(TrimestePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(AnoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TipoClasse1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addComponent(DomingoAula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Aluno_EBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Presenca1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PopularTab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton15)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("LanÃ§amento de PresenÃ§a", jPanel8);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel56.setText("Selecione a Classe ");

        ImprimePauta.setText("Iniciar");
        ImprimePauta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ImprimePautaMousePressed(evt);
            }
        });

        TabPauta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabPauta.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(TabPauta);
        TabPauta.getColumnModel().getColumn(0).setResizable(false);
        TabPauta.getColumnModel().getColumn(0).setPreferredWidth(400);
        TabPauta.getColumnModel().getColumn(1).setResizable(false);
        TabPauta.getColumnModel().getColumn(1).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(2).setResizable(false);
        TabPauta.getColumnModel().getColumn(2).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(3).setResizable(false);
        TabPauta.getColumnModel().getColumn(3).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(4).setResizable(false);
        TabPauta.getColumnModel().getColumn(4).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(5).setResizable(false);
        TabPauta.getColumnModel().getColumn(5).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(6).setResizable(false);
        TabPauta.getColumnModel().getColumn(6).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(7).setResizable(false);
        TabPauta.getColumnModel().getColumn(7).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(8).setResizable(false);
        TabPauta.getColumnModel().getColumn(8).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(9).setResizable(false);
        TabPauta.getColumnModel().getColumn(9).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(10).setResizable(false);
        TabPauta.getColumnModel().getColumn(10).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(11).setResizable(false);
        TabPauta.getColumnModel().getColumn(11).setPreferredWidth(15);
        TabPauta.getColumnModel().getColumn(12).setResizable(false);
        TabPauta.getColumnModel().getColumn(12).setPreferredWidth(15);

        Pesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione a classe >", "CRIANCAS", "JUNIORES", "ADOLESCENTES", "JOVENS", "ADULTOS", "DISCIPULADO" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jScrollPane8)
                        .addContainerGap())
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(177, 177, 177)
                        .addComponent(ImprimePauta, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                        .addContainerGap(53, Short.MAX_VALUE))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(ImprimePauta)
                    .addComponent(Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Palta", jPanel9);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Nome :");

        NomeMembro.setEditable(false);
        NomeMembro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        TipoClasse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<SELECIONE A CLASSE >", "CRIANCAS", "JUNIORES", "ADOLESCENTES", "JOVENS", "ADULTOS", "DISCIPULADO" }));

        TabMembro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nome "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabMembro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabMembroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabMembro);

        PesquisaNome.setBackground(new java.awt.Color(233, 244, 224));
        PesquisaNome.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        PesquisaMembro.setText("Pesquisar");
        PesquisaMembro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PesquisaMembroMousePressed(evt);
            }
        });

        EfetuaMatricula.setText("Salvar");
        EfetuaMatricula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EfetuaMatriculaMousePressed(evt);
            }
        });

        NovoAluno.setBackground(new java.awt.Color(255, 255, 255));
        Grupo.add(NovoAluno);
        NovoAluno.setFont(new java.awt.Font("Georgia", 3, 11)); // NOI18N
        NovoAluno.setForeground(new java.awt.Color(0, 0, 255));
        NovoAluno.setText("Novo Aluno");
        NovoAluno.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                NovoAlunoStateChanged(evt);
            }
        });
        NovoAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoAlunoActionPerformed(evt);
            }
        });
        NovoAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NovoAlunoFocusGained(evt);
            }
        });

        TrocaAluno.setBackground(new java.awt.Color(255, 255, 255));
        Grupo.add(TrocaAluno);
        TrocaAluno.setFont(new java.awt.Font("Georgia", 3, 11)); // NOI18N
        TrocaAluno.setForeground(new java.awt.Color(0, 0, 255));
        TrocaAluno.setText("Troca de Classe");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(PesquisaNome))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PesquisaMembro)
                                .addGap(0, 89, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(EfetuaMatricula))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(NovoAluno)
                        .addGap(18, 18, 18)
                        .addComponent(TrocaAluno))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NomeMembro, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TipoClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NovoAluno)
                    .addComponent(TrocaAluno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(NomeMembro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TipoClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(PesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PesquisaMembro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EfetuaMatricula)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("MatrÃ­cula de Aluno", jPanel10);

        jLabel3.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jLabel3.setText("UsuÃ¡rio do Sistema :");

        Usuario.setBackground(new java.awt.Color(255, 255, 255));
        Usuario.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        Usuario.setForeground(new java.awt.Color(255, 0, 51));
        Usuario.setText("jLabel4");
        Usuario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton3.setText("Sair");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton3MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MousePressed
       
// TODO add your handling code here:
  int confirma = 0;  
  confirma = JOptionPane.showConfirmDialog(rootPane, "DESEJA REALMENTE FECHAR ?", null, confirma);
    System.out.println(confirma);
    if (confirma == 0){
        this.dispose();
    }
}//GEN-LAST:event_jButton3MousePressed

    private void ImprimePautaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImprimePautaMousePressed
        // TODO add your handling code here:
    int confirma = 0; 
        PopulaPauta();
        confirma = JOptionPane.showConfirmDialog(rootPane, "DESEJA REALIZAR IMPRESSÃO ?", null, confirma);
        System.out.println(confirma);  
        switch (confirma){
            case 0:
                     try {
                            TabPauta.print();
                    } catch (PrinterException ex) {
                             Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
                    }
                break;
            case 1:
                JOptionPane.showMessageDialog(rootPane, "IMPRESSÃO CANCELADA");
                break;
        }
        
        
    }//GEN-LAST:event_ImprimePautaMousePressed

    private void EfetuaMatriculaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EfetuaMatriculaMousePressed
        // TODO add your handling code here:
   if("".equals(NomeMembro.getText())){
       java.awt.Toolkit.getDefaultToolkit().beep(); 
       JOptionPane.showMessageDialog(null,"PESQUISE O NOME DO MEMBRO \n ANTES DE SALVAR","ERRO NO SALVAMENTO!!!!" , JOptionPane.ERROR_MESSAGE); 
   }else{
        if (NovoAluno.isSelected()){
            InserirNovoAluno();
            LimparFormulario();
        }else if(TrocaAluno.isSelected()){
            TrocarAluno();
            LimparFormulario();
        }else{
            java.awt.Toolkit.getDefaultToolkit().beep();
            InOut.MsgDeErro(null, "INSERIR NOVO ALUNO? \n \nTROCAR ALUNO DE TURMA?");
        }
   }   
    }//GEN-LAST:event_EfetuaMatriculaMousePressed

    private void PesquisaMembroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PesquisaMembroMousePressed
        // TODO add your handling code here:
        con=new ConectaBanco();
        String sSql=new String();
  if("".equals(PesquisaNome.getText())){
      InOut.MsgDeAviso(null, "Digite o nome a ser pesquisado!");
  }else{     
    if(NovoAluno.isSelected()){
         sSql="SELECT NOME FROM MEMBROS WHERE NOME LIKE '%"+PesquisaNome.getText()+"%' order by nome;";
    }else if(TrocaAluno.isSelected()){
        sSql="SELECT NOME_ALUNO FROM EBD WHERE NOME_ALUNO LIKE '%"+PesquisaNome.getText()+"%' order by NOME_ALUNO;";
    }
        con.conecta();
            try {
                con.executaSelect(sSql);
            } catch (SQLException ex) {
                Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
            }
        System.out.println(sSql);
        populaTabMembros(con.resultset);
        con.desconecta();
  }     
       
        
        
    }//GEN-LAST:event_PesquisaMembroMousePressed

    private void TabMembroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabMembroMouseClicked
        // TODO add your handling code here:
        int linha=0;
        String sMembro = new String();       
   
    linha=TabMembro.getSelectedRow();
    sMembro = TabMembro.getValueAt(linha, 0).toString();
    // TODO add your handling code here:
        con=new ConectaBanco();
        String sSql=new String();
        
   if (NovoAluno.isSelected()){
        sSql="SELECT NOME FROM MEMBROS WHERE NOME='"+sMembro+"'ORDER BY NOME;";
        con.conecta();
         if(!con.conecta())
        {
            InOut.MsgDeErro(null,"Erro ao conectar");
            return;            
        }
            try {
                con.executaSelect(sSql);
            } catch (SQLException ex) {
                Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        lRes=con.resultset;        
        try 
        {           
            while (lRes.next())
            {
                
                 NomeMembro.setText(lRes.getString("NOME"));   
            }            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }        
        con.desconecta();
   } else if (TrocaAluno.isSelected()){
       sSql="SELECT NOME_ALUNO,CLASSE_ALUNO FROM EBD WHERE NOME_ALUNO='"+sMembro+"'ORDER BY NOME_ALUNO;";
        con.conecta();
         if(!con.conecta())
        {
            InOut.MsgDeErro(null,"Erro ao conectar");
            return;            
        }
            try {
                con.executaSelect(sSql);
            } catch (SQLException ex) {
                Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        lRes=con.resultset;        
        try 
        {           
            while (lRes.next())
            {
                
                 NomeMembro.setText(lRes.getString("NOME_ALUNO"));  
                 TipoClasse.setSelectedItem(lRes.getString("CLASSE_ALUNO"));
            }            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }        
        con.desconecta();
   } 
        
        
        
        
        
    }//GEN-LAST:event_TabMembroMouseClicked

    private void NovoAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoAlunoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_NovoAlunoActionPerformed

    private void NovoAlunoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_NovoAlunoStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_NovoAlunoStateChanged

    private void NovoAlunoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NovoAlunoFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_NovoAlunoFocusGained

    private void PopularTabMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PopularTabMousePressed
        // TODO add your handling code here:
        if (TipoClasse1.getSelectedItem()=="<Selecione a classe>"){
            java.awt.Toolkit.getDefaultToolkit().beep(); 
            JOptionPane.showMessageDialog(null,"Selecione a Classe!!!",null , JOptionPane.WARNING_MESSAGE);
        }
        else if(TrimestePesquisa.getSelectedItem()=="<Selecione>")
        {
            java.awt.Toolkit.getDefaultToolkit().beep(); 
            JOptionPane.showMessageDialog(null,"Selecione o trimestre!!!",null , JOptionPane.WARNING_MESSAGE);
        }
        else if(AnoPesquisa.getSelectedItem()=="<Selecione>")
        {
            java.awt.Toolkit.getDefaultToolkit().beep(); 
            JOptionPane.showMessageDialog(null,"Selecione o ano!!!",null , JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            TabAluno.setVisible(true);
            con=new ConectaBanco();
        String sSql=new String();
        sSql="SELECT NOME_ALUNO,CLASSE_ALUNO FROM EBD WHERE CLASSE_ALUNO='"+TipoClasse1.getSelectedItem()+"' ORDER BY NOME_ALUNO;";
        con.conecta();
            try {
                con.executaSelect(sSql);
            } catch (SQLException ex) {
                Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
            }
System.out.println("primeiro select"+sSql);       
        populaTabAluno(con.resultset);
        con.desconecta();  
        }
            
        
        
    }//GEN-LAST:event_PopularTabMousePressed

    private void TabAlunoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabAlunoMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TabAlunoMousePressed

    private void TabAlunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabAlunoMouseClicked
 // TODO add your handling code here:
        int linha=0;
        String sMembro = new String();       
   
    linha=TabAluno.getSelectedRow();
    sMembro = TabAluno.getValueAt(linha, 0).toString();
    // TODO add your handling code here:
        con=new ConectaBanco();
        String sSql=new String();
        
   
        sSql="SELECT NOME_ALUNO FROM EBD WHERE NOME_ALUNO='"+sMembro+"'ORDER BY NOME_aluno;";
        con.conecta();
         if(!con.conecta())
        {
            InOut.MsgDeErro(null,"Erro ao conectar");
            return;            
        }
        try {
            con.executaSelect(sSql);
        } catch (SQLException ex) {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(sMembro);
        lRes=con.resultset;        
        try 
        {           
            while (lRes.next())
            {
                
                 Aluno_EBD.setText(lRes.getString("NOME_ALUNO"));   
            }            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }        
        con.desconecta();  
       
        
        
        
    }//GEN-LAST:event_TabAlunoMouseClicked

    private void jButton15MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MousePressed
        // TODO add your handling code here:
         String sSql = new String();
    if (Presenca1.getSelectedItem()==" "){
        InOut.MsgDeAviso(null, "O aluno Faltou ou recebeu PresenÃ§a?");
    }else{     
         sSql="INSERT INTO EBD_PRESENCA (NOME_ALUNO,CLASSE_ALUNO,ANO,TRIMESTRE,DOMINGO,PRESENCA) VALUES ('"+
                 Aluno_EBD.getText()+"','"+
                 TipoClasse1.getSelectedItem()+"','"+
                 AnoPesquisa.getSelectedItem()+"','"+
                 TrimestePesquisa.getSelectedItem()+"','"+
                 DomingoAula.getSelectedItem()+"','"+
                 Presenca1.getSelectedItem()+"');"
                 
                 
                 ;
        con= new ConectaBanco();
        
        if(!con.conecta())
        {
            InOut.MsgDeErro(null,"Erro ao conectar");
            return;            
        }
            try {
                con.executa(sSql);
            } catch (SQLException ex) {
                Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
            }
        con.desconecta();
    }
    }//GEN-LAST:event_jButton15MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new EscolaBiblicaDominical().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Aluno_EBD;
    private javax.swing.JComboBox AnoPesquisa;
    private javax.swing.JComboBox DomingoAula;
    private javax.swing.JComboBox DomingoAula1;
    private javax.swing.JButton EfetuaMatricula;
    private javax.swing.ButtonGroup Grupo;
    private javax.swing.ButtonGroup Grupo2;
    private javax.swing.ButtonGroup Grupo3;
    private javax.swing.JButton ImprimePauta;
    private javax.swing.JTextField NomeMembro;
    private javax.swing.JRadioButton NovoAluno;
    private javax.swing.JComboBox Pesquisa;
    private javax.swing.JButton PesquisaMembro;
    private javax.swing.JTextField PesquisaNome;
    private javax.swing.JButton PopularTab;
    private javax.swing.JComboBox Presenca1;
    private javax.swing.JTable TabAluno;
    private javax.swing.JTable TabMembro;
    private javax.swing.JTable TabPauta;
    private javax.swing.JComboBox TipoClasse;
    private javax.swing.JComboBox TipoClasse1;
    private javax.swing.JComboBox TrimestePesquisa;
    private javax.swing.JRadioButton TrocaAluno;
    private javax.swing.JLabel Usuario;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private void PopulaPauta() {
        DefaultTableModel modelo1 = (DefaultTableModel) TabPauta.getModel();
      String sSql = new String();     
      int linha=0;
  
      con=new ConectaBanco();
       
        sSql="SELECT NOME_ALUNO,CLASSE_ALUNO FROM EBD WHERE CLASSE_ALUNO ='"+Pesquisa.getSelectedItem()+"'ORDER BY NOME_ALUNO;";
        con.conecta();
        try {
            con.executaSelect(sSql);
        } catch (SQLException ex) {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        lRes=con.resultset; 
        System.out.println(lRes);
        System.out.println(sSql);
        try {                   
            modelo1.setRowCount(0);
            while (lRes.next()) {
                modelo1.addRow(new Object[]{
                            lRes.getString("NOME_ALUNO"),
                            
                           });

            }
            TabPauta.setModel(modelo1);
        } catch (SQLException ex) {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }
         
        
        
        con.desconecta();
        
        
        
        
    }

    private void TrocarAluno()
    {
       String sSql = new String();
        sSql = "UPDATE EBB SET CLASSE_ALUNO ='"+TipoClasse.getSelectedItem()+"' WHERE NOME_ALUNO ='"+NomeMembro.getText()+"';"; 
        con= new ConectaBanco();
        
        if(!con.conecta())
        {
            InOut.MsgDeErro(null,"Erro ao conectar");
            return;            
        }
        try {
            con.executa(sSql);
        } catch (SQLException ex) {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(sSql);
        con.desconecta();
    }

    private void InserirNovoAluno()
    {
        String sSql = new String();
        sSql = "INSERT INTO EBD(NOME_ALUNO,CLASSE_ALUNO) VALUES ('"+NomeMembro.getText()+"','"+TipoClasse.getSelectedItem()+"');"; 
        con= new ConectaBanco();
        if(!con.conecta())
        {
            InOut.MsgDeErro(null,"Erro ao conectar");
            return;            
        }
        try {
            con.executa(sSql);
        } catch (SQLException ex) {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }
        con.desconecta();    
    }

    private void LimparFormulario() {
        
        
        
    }

    private void populaTabMembros(ResultSet res) {
        DefaultTableModel modelo1 = (DefaultTableModel) TabMembro.getModel();
   if(NovoAluno.isSelected()){
        try {
        con=new ConectaBanco();
         String sSql=new String();
         sSql="SELECT NOME FROM MEMBROS WHERE NOME LIKE '%"+PesquisaNome.getText()+"%' order by nome;";
        
        con.conecta();
         if(!con.conecta())
        {
            InOut.MsgDeErro(null,"Erro ao conectar");
            return;            
        }
        con.executaSelect(sSql);
       
        System.out.println(sSql);
        lRes = con.resultset;      
        System.out.println(lRes);
            modelo1.setRowCount(0);
            while (lRes.next()) {
                modelo1.addRow(new Object[]{
                            lRes.getString("NOME")
                            
                           });

            }
            TabMembro.setModel(modelo1);
        } catch (SQLException ex) {

            InOut.MsgDeErro(null, "ERRO AO PESQUISAR");
        }
        con.desconecta(); 
    }else{
       try {
        con=new ConectaBanco();
         String sSql=new String();
         sSql="SELECT NOME_aluno FROM ebd WHERE NOME_aluno LIKE '%"+PesquisaNome.getText()+"%' order by nome_aluno;";
        
        con.conecta();
         if(!con.conecta())
        {
            InOut.MsgDeErro(null,"Erro ao conectar");
            return;            
        }
        con.executaSelect(sSql);
       
        System.out.println(sSql);
        lRes = con.resultset;      
        System.out.println(lRes);
            modelo1.setRowCount(0);
            while (lRes.next()) {
                modelo1.addRow(new Object[]{
                            lRes.getString("NOME_aluno")
                            
                           });

            }
            TabMembro.setModel(modelo1);
        } catch (SQLException ex) {

            InOut.MsgDeErro(null, "ERRO AO PESQUISAR");
        }
        con.desconecta(); 
    }
    
}
    private void populaTabAluno(ResultSet res) {
        
         DefaultTableModel modelo1 = (DefaultTableModel) TabAluno.getModel();
      String sSql = new String();     
      int linha=0;
  
      con=new ConectaBanco();
       
       sSql="SELECT NOME_ALUNO,CLASSE_ALUNO FROM EBD WHERE CLASSE_ALUNO='"+TipoClasse1.getSelectedItem()+"' ORDER BY NOME_ALUNO;";
        con.conecta();
        try {
            con.executaSelect(sSql);
        } catch (SQLException ex) {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        lRes=con.resultset; 
        System.out.println(lRes);
        System.out.println(sSql);
        try {                   
            modelo1.setRowCount(0);
            while (lRes.next()) {
                modelo1.addRow(new Object[]{
                            lRes.getString("NOME_ALUNO"),
                            
                           });

            }
            TabAluno.setModel(modelo1);
        } catch (SQLException ex) {
            Logger.getLogger(EscolaBiblicaDominical.class.getName()).log(Level.SEVERE, null, ex);
        }
         
        
        
        con.desconecta();
        
    }
}
